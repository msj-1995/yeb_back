<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msj.server.mapper.MenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.msj.server.pojo.Menu">
        <id column="id" property="id" />
        <result column="url" property="url" />
        <result column="path" property="path" />
        <result column="component" property="component" />
        <result column="name" property="name" />
        <result column="iconCls" property="iconCls" />
        <result column="keepAlive" property="keepAlive" />
        <result column="requireAuth" property="requireAuth" />
        <result column="parentId" property="parentId" />
        <result column="enabled" property="enabled" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
    </sql>
    <!-- 我们的resultMap继承了BaseResultMap,因为那是已经定义好的别名了 -->
    <resultMap id="Menus" type="com.msj.server.pojo.Menu" extends="BaseResultMap"></resultMap>

    <!-- 根据用户id查询菜单列表 -->
    <!-- 现在Menu中多了一个children,没有与数据库一一对应，所以我们没有使用实体类对应，自己使用resultMap来对应 -->
    <select id="getMenuByAdminId" resultMap="Menus">
        select DISTINCT
            m1.*,
            m2.id as Id2,
            m2.url as url2,
            m2.path as path2,
            m2.component as component2,
            m2.`name` as name2,
            m2.iconCls as iconCls2,
            m2.keepAlive as keepAlive2,
            m2.requireAuth as requireAuth2,
            m2.parentId as parentId,
            m2.enabled as enabled2
        from
            t_menu m1,
            t_menu m2,
            t_admin_role ar,
            t_menu_role mr
        where m1.id = m2.parentId
          and
            m2.id = mr.mid
          and
            mr.rid = ar.rid
          and
            ar.adminId = #{id}
          and m2.enabled = TRUE
    </select>

</mapper>
